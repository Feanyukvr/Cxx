#include<iostream>
using namespace std;
//概念：
//重载函数调用操作符的类，其对象常称为函数对象
//函数对象使用重载的()时，行为类似函数调用，也叫仿函数
//函数对象(仿函数)是一个类，不是一个函数
//
//特点：
//函数对象在使用时，可以像普通函数那样调用, 可以有参数，可以有返回值
//函数对象超出普通函数的概念，函数对象可以有自己的状态
//函数对象可以作为参数传递
#include <string>

//1、函数对象在使用时，可以像普通函数那样调用, 可以有参数，可以有返回值
class MyAdd1{
public:
	int operator()(int v1, int v2) {
		return v1 + v2;
	};
};

void test11() {
	MyAdd1 myAdd;
	cout << myAdd(10, 10) << endl;
};

//2、函数对象可以有自己的状态
class MyPrint1{
public:
	int count; //内部自己的状态
	MyPrint1() {
		count = 0;
	};
	void operator()(string test) {
		cout << test << endl;
		count++; //统计使用次数
	};
};
void test12() {
	MyPrint1 myPrint;
	myPrint("hello world");
	myPrint("hello world");
	myPrint("hello world");
	cout << "myPrint调用次数为： " << myPrint.count << endl;
};

//3、函数对象可以作为参数传递
void doPrint1(MyPrint1& mp, string test) {
	mp(test);
};

void test13() {
	MyPrint1 myPrint;
	doPrint1(myPrint, "Hello C++");
};

int main1() {
	test11();
	test12();
	test13();
	system("pause");
	return 0;
}


//总结：
//仿函数写法非常灵活，可以作为参数进行传递。